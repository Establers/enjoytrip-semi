<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoytrip.board.model.mapper.BoardMapper">

	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				where title like concat('%', #{word}, '%')
			</if>
			
			<if test="key == 'content'">
				where content like concat('%', #{word}, '%')
			</if>
			
			<if test="key == 'userId'">
				where user_id = ${word}
			</if>
		</if>
	</sql>

	<!-- board -->
	<!-- 글 전체 가져오기 -->
	<select id="listBoard" parameterType="map" resultType="boardDto">
		select b.board_id, DATE_FORMAT(b.register_time, '%Y-%m-%d %H:%i:%s') as 'register_time', 
			   b.hit, b.title, b.user_id, b.content, u.nickname
		from board b left join user u using(user_id)
		<include refid="search"></include>
		order by board_id desc
		limit #{start}, #{listsize}
	</select>
	
	<!-- 전체 글 수 가져오기 -->
	<select id="getTotalBoardCount" parameterType="map" resultType="int">
		select count(board_id)
		from board
		<include refid="search"></include>
	</select>
	
	<!-- 글 하나 가져오기 -->
	<select id="viewBoard" parameterType="int" resultType="boardDto">
			select board_id, DATE_FORMAT(register_time, '%Y-%m-%d %H:%i:%s') as 'register_time', hit, title, content, user_id
			from board
			where board_id = #{boardId}
	</select>
	
	<!-- 글 쓰기 -->
	<insert id="writeBoard" parameterType="boardDto">
			insert into board(board_id, register_time, hit, title, content, user_id)
			values (default, now(), #{hit}, #{title}, #{content}, #{user_id})
	</insert>
	
	<!-- 글 수정 -->
	<update id="modifyBoard" parameterType="boardDto">
			update board
			set title = #{title}, content = #{content}
			where board_id = #{board_id}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="java.lang.Integer">
			delete from board
			where board_id = #{boardId}
	</delete>
	
	<!-- 조회수 늘리기 -->
	<update id="updateHit" parameterType="int">
		update board
		set hit = hit + 1
		where board_id = #{boardId}
	</update>
	
	<!-- 파일 업로드 -->
	<insert id="registerFileInfo">
		insert into board_file_info (board_file_id, file_url, board_id)
		values
		<foreach collection="fileInfoList" item="fileInfoDto" separator=",">
			(default, #{fileInfoDto.file_url}, #{fileInfoDto.board_id})
		</foreach>
	</insert>
	
	<!-- 파일 정보 가져오기 -->
	<select id="fileInfoList" parameterType="int" resultType="fileInfoDto">
		select board_file_id, file_url, board_id
		from board_file_info
		where board_id = #{boardId}
	</select>
	
	<!-- 파일 삭제 -->
	<delete id="deleteFile" parameterType="int">
		delete from board_file_info
		where board_id = #{boardId}
	</delete>
</mapper>