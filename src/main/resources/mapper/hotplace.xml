<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.enjoytrip.hotplace.model.mapper.HotplaceMapper">

	<resultMap type="hotplaceDto" id="hotplace">
		<result column="hotplace_id" property="hotplaceId" />
		<result column="like_count" property="likeCount" />
		<result column="latitude" property="latitude" />
		<result column="longitude" property="longitude" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="register_date" property="regDate" />
		<result column="user_id" property="userId" />
		<result column="hit_count" property="hitCount" />
		<result column="type" property="type" />
		<result column="address" property="address" />
		<result column="season" property="season" />
		<result column="nickname" property="nickname" />
	</resultMap>
	
	<resultMap type="hotplaceFileInfoDto" id="file">
		<result column="hotplace_file_id" property="fileId"/>
		<result column="file_name" property="fileName"/>
		<result column="hotplace_id" property="hotplaceId"/>
	</resultMap>


	<!-- 글 작성하기 -->
	<insert id="insertHotplace" parameterType="hotplaceDto">
		insert into hotplace
		(user_id,latitude,longitude,title,content,register_date,like_count,hit_count,type,address,season)
		values (#{userId},
		#{latitude},#{longitude},#{title},#{content},now(),0,0,#{type},#{address},#{season})
		<selectKey resultType="int" keyProperty="hotplaceId"
			order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>

	<!-- 검색 조건 걸어줄거임 -->
	<!-- 검색 조건에는 key, word, type, season -->
	<sql id="search">
		<where>
			<if test="word != null and word != ''">
				<if test="key == 'address'">
					address like concat('%', #{word}, '%')
				</if>

				<if test="key == 'others'">
					content like concat('%', #{word}, '%') or content like
					concat('%', #{word}, '%')
				</if>

				<if test="key == 'writer'">
					where user_id in (select user_id from user where
					nickname like
					concat('%', #{word},'%'))
				</if>
			</if>

			<if test="word != null and word != ''"> and </if>

			<if test="type != 0">
				type = #{type}
			</if>

			<if test="type != 0">
				and
			</if>

			<if test="season != 0">
				season = #{season}
			</if>
		</where>
	</sql>

	<select id="listHotplace" parameterType="map"
		resultMap="hotplace">

		select h.*, u.nickname
		from hotplace h left join user u using(user_id)
		<include refid="search" />
		order by hotplace_id desc
		limit #{start}, #{listsize}


	</select>


	<select id="getTop3" resultMap="hotplace">
		select * from hotplace
		order by
		like_count limit 3

	</select>

	<!-- 전체 글 수 가져오기 -->
	<select id="getTotalHotplaceCount" parameterType="map"
		resultType="int">
		select count(hotplace_id)
		from hotplace
		<include refid="search"></include>
	</select>

	<select id="getHotplaceById" parameterType="int"
		resultMap="hotplace">
		select h.*, u.nickname
		from hotplace h left join user u
		using(user_id)
		where
		h.hotplace_id = #{hotplaceId}
	</select>

	<select id="fileInfoList" resultMap="file">
		select *
		from
		hotplace_file_info
		where hotplace_id =
		#{hotplaceId}
	</select>

	<update id="updateHit" parameterType="int">
		update hotplace
		set
		hit_count =
		hit_count +1
		where hotplace_id = #{hotplaceId}
	</update>

	<update id="updateLike" parameterType="int">
		update hotplace
		set
		like_count = like_count +1
		where hotplace_id = #{hotplaceId}
	</update>


	<update id="updateHotplace" parameterType="hotplaceDto">
		update hotplace
		set
		title = #{title}, content = #{content}, season=#{season}
		where
		hotplace_id = #{hotplaceId}
	</update>

	<delete id="deleteFileAll" parameterType="int">
		delete from
		hotplace_file_info
		where hotplace_id = #{hotplaceId}
	</delete>

	<delete id="deleteHotplace" parameterType="int">
		delete from hotplace
		where hotplace_id = #{hotplaceId}
	</delete>

	<update id="likeHotplace" parameterType="int">
		update hotplace
		set
		like_count = like_count+1
		where hotplace_id = #{hotplaceId}
	</update>

	<insert id="userLikeHotplace" parameterType="map">
		insert into
		user_like_hotplace
		(hotplace_id, user_id) values (#{hotplaceId},
		#{userId})
	</insert>

	<update id="hateHotplace" parameterType="int">
		update hotplace
		set
		like_count = like_count-1
		where hotplace_id = #{hotplaceId}
	</update>

	<delete id="userHateHotplace" parameterType="map">
		delete from
		user_like_hotplace
		where hotplace_id = #{hotplaceId} and user_id =
		#{userId}
	</delete>
	
	<insert id="registerFile">
		INSERT INTO hotplace_file_info (hotplace_id, file_name)
		VALUES
		<foreach collection="fileList" item="fileName" separator=",">
			(LAST_INSERT_ID(), #{fileName})
		</foreach>
	</insert>

</mapper>